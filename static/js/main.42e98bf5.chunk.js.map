{"version":3,"sources":["components/core/Button.js","components/core/Layout.js","components/core/Type.js","pages/AdminPage.js","components/Links.js","pages/HawesPage.js","pages/LandingPage.js","components/core/Input.js","pages/NotHawesPage.js","components/Errors/AppError.js","utils/firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","StyledButton","props","rest","handleClick","useCallback","Panelbear","eventName","isLink","isButton","as","onClick","Content","Title","Subtitle","H3","AdminPage","user","isSignedIn","uid","firebase","small","googleAuthProvider","FeedbackApprovals","RejectFeedback","a","runMutation","approved","ApproveFeedback","type","path","orderByValue","data","value","Object","key","feedback","state","Feedback","String","memo","Links","links","name","link","href","target","rel","Link","LinkList","LinkGroups","groups","group","gf","process","HawesPage","useState","limit","useEffect","tag","lang","setGif","fetchData","renderGif","useMemo","finalGif","gif","width","noLink","limitToFirst","GifContainer","LandingPage","to","InputGroup","Label","Input","Form","NotHawesPage","commentFieldRef","useRef","nameFieldRef","setTimeout","setSuccess","handleSubmit","ev","comment","created_at","updated_at","TIMESTAMP","success","onSubmit","htmlFor","id","placeholder","ref","required","Success","Hero","Error","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","fallback","Profiler","firebaseAuth","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","autoSessionTracking","environment","integrations","Integrations","tracesSampleRate","ReactDOM","document","console"],"mappings":"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","file":"static/js/main.42e98bf5.chunk.js","sourcesContent":["import { useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport { styled } from '@linaria/react'\nimport * as Panelbear from '@panelbear/panelbear-js'\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`\n\nconst StyledButton = styled(Link)`\n\tborder: 2px solid #222;\n\tmargin: 16px;\n\tfont-weight: 700;\n\tborder-radius: 8px;\n\tbackground-color: #efefef;\n\ttext-align: center;\n\tdisplay: inline-block;\n\n\t&:hover {\n\t\tbackground-color: ${props => (props.disabled ? '#efefef' : '#dedede')};\n\t}\n\n\tfont-size: ${props => (props.small ? '20px' : '32px')};\n\tpadding: ${props => (props.small ? '8px 16px' : '16px 32px')};\n\tmin-width: ${props => (props.small ? '175px' : '300px')};\n\n\ttext-decoration: ${props => (props.disabled ? 'line-through' : 'none')};\n\tcursor: ${props => (props.disabled ? 'default' : 'pointer')};\n`\n\nconst Button = ({ eventName, ...rest }) => {\n\tconst handleClick = useCallback(() => {\n\t\tif (eventName) {\n\t\t\tPanelbear.track(`click_${eventName.replace(/\\s/g, '')}`)\n\t\t}\n\t}, [eventName])\n\n\tconst isLink = !!rest.to || !!rest.href\n\tconst isButton = rest.type === 'submit'\n\n\tconst as = isLink ? Link : isButton ? 'button' : 'div'\n\n\treturn (\n\t\t<Wrapper onClick={handleClick}>\n\t\t\t<StyledButton as={as} {...rest} />\n\t\t</Wrapper>\n\t)\n}\n\nexport default Button\n","import { styled } from '@linaria/react'\n\nexport const PageWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\n\twidth: 100%;\n\tpadding: 0px 16px;\n\n\tmargin-left: auto;\n\tmargin-right: auto;\n`\n\nexport const Content = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 0px 16px;\n\tmax-width: 600px;\n\n\talign-items: stretch;\n\tmargin-left: auto;\n\tmargin-right: auto;\n`\n","import { styled } from '@linaria/react'\n\nexport const Title = styled.h1`\n\tfont-size: 96px;\n\tletter-spacing: 4px;\n\ttext-align: center;\n\tmargin: 64px 8px;\n\n\t@media (max-width: 420px) {\n\t\tfont-size: 64px;\n\t\tletter-spacing: 2px;\n\t}\n`\n\nexport const Subtitle = styled.h2`\n\tfont-size: 36px;\n\tborder-bottom: 1px solid #bcbcbc;\n\n\t@media (max-width: 420px) {\n\t\tfont-size: 28px;\n\t}\n`\n\nexport const H3 = styled.h3`\n\tfont-size: 24px;\n\tcolor: #333;\n`\n","import 'firebase/auth'\n\nimport React, { memo, useCallback } from 'react'\nimport { styled } from '@linaria/react'\nimport { FirebaseAuthConsumer } from '@react-firebase/auth'\nimport { FirebaseDatabaseMutation, FirebaseDatabaseNode } from '@react-firebase/database'\n\nimport Button from 'components/core/Button'\nimport { Content } from 'components/core/Layout'\nimport { Subtitle, Title } from 'components/core/Type'\n\nconst AdminPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<Title>Admin</Title>\n\t\t\t<Content>\n\t\t\t\t<FirebaseAuthConsumer>\n\t\t\t\t\t{({ isSignedIn, firebase, user }) => {\n\t\t\t\t\t\tif (isSignedIn === true) {\n\t\t\t\t\t\t\tconst { displayName, uid } = user\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Subtitle>Hello, {displayName}</Subtitle>\n\t\t\t\t\t\t\t\t\t{/* TODO - Change this to use rules */}\n\t\t\t\t\t\t\t\t\t{uid === 'FARYKJpqquOyWIjBkAnq7dxe3262' && <FeedbackApprovals />}\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tfirebase.app().auth().signOut()\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSign out\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsmall\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\t\t\t\t\t\t\t\t\t\t\tfirebase.auth().signInWithPopup(googleAuthProvider)\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t</FirebaseAuthConsumer>\n\t\t\t</Content>\n\t\t</>\n\t)\n}\n\nconst FeedbackApprovals = () => {\n\tconst RejectFeedback = useCallback(async (key, feedback, runMutation) => {\n\t\tawait runMutation({\n\t\t\t[key]: {\n\t\t\t\t...feedback,\n\t\t\t\tapproved: false,\n\t\t\t},\n\t\t})\n\t}, [])\n\n\tconst ApproveFeedback = useCallback(async (key, feedback, runMutation) => {\n\t\tawait runMutation({\n\t\t\t[key]: {\n\t\t\t\t...feedback,\n\t\t\t\tapproved: true,\n\t\t\t},\n\t\t})\n\t}, [])\n\treturn (\n\t\t<FirebaseDatabaseMutation type=\"update\" path=\"feedback\">\n\t\t\t{({ runMutation }) => (\n\t\t\t\t<FirebaseDatabaseNode path=\"feedback/\" orderByValue={'created_on'}>\n\t\t\t\t\t{data => {\n\t\t\t\t\t\tconst { value } = data\n\n\t\t\t\t\t\tif (value === null || typeof value === 'undefined') return null\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{Object.keys(value)\n\t\t\t\t\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t\t\t\t\t.map(key => {\n\t\t\t\t\t\t\t\t\t\t\tconst feedback = value[key]\n\t\t\t\t\t\t\t\t\t\t\tconst state = feedback.approved === true ? '#90ee90' : feedback.approved === false ? '#ffcccb' : '#fafad2'\n\t\t\t\t\t\t\t\t\t\t\t// if (feedback.approved) return null\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<Feedback.Container key={key} state={state}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Feedback.Comment>\"{feedback.comment}\"</Feedback.Comment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Feedback.Name>{feedback.name}</Feedback.Name>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Feedback.Name>Approved: {String(feedback.approved)}</Feedback.Name>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Feedback.ActionWrapper>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => RejectFeedback(key, feedback, runMutation)} small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tReject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => ApproveFeedback(key, feedback, runMutation)} small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tApprove\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Feedback.ActionWrapper>\n\t\t\t\t\t\t\t\t\t\t\t\t</Feedback.Container>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</FirebaseDatabaseNode>\n\t\t\t)}\n\t\t</FirebaseDatabaseMutation>\n\t)\n}\n\nconst Feedback = {}\nFeedback.Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tpadding: 16px 8px;\n\tborder: 1px solid #dedede;\n\tborder-radius: 8px;\n\tmargin: 16px 8px;\n\n\tbackground-color: ${props => props.state};\n`\nFeedback.Comment = styled.div`\n\tflex: 1;\n\tmargin-bottom: 8px;\n`\nFeedback.Name = styled.div`\n\tflex: 1;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n`\nFeedback.ActionWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\n\t@media (max-width: 420px) {\n\t\tflex-direction: column;\n\t}\n`\n\nexport default memo(AdminPage)\n","import React, { memo, useCallback } from 'react'\nimport { styled } from '@linaria/react'\nimport * as Panelbear from '@panelbear/panelbear-js'\n\nimport { H3 } from './core/Type'\n\nexport const Links = memo(({ links }) => {\n\tconst handleClick = useCallback(name => {\n\t\tPanelbear.track(`link_${name.replace(/\\s/g, '_')}`)\n\t}, [])\n\treturn (\n\t\t<LinkList>\n\t\t\t{links.map(link => (\n\t\t\t\t<Link key={link.title} onClick={() => handleClick(link.title)}>\n\t\t\t\t\t<a href={link.href} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t{link.title}\n\t\t\t\t\t</a>\n\t\t\t\t</Link>\n\t\t\t))}\n\t\t</LinkList>\n\t)\n})\n\nconst Link = styled.div`\n\tpadding: 8px 0px;\n\tmargin-left: 8px;\n\tfont-size: 20px;\n`\nconst LinkList = styled.div``\n\nexport const LinkGroups = ({ groups }) => {\n\treturn (\n\t\t<div>\n\t\t\t{groups.map(group => (\n\t\t\t\t<React.Fragment key={group.title}>\n\t\t\t\t\t<H3>{group.title}</H3>\n\t\t\t\t\t<Links links={group.links} />\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n","import React, { memo, useEffect, useMemo, useState } from 'react'\nimport { GiphyFetch } from '@giphy/js-fetch-api'\nimport { Gif } from '@giphy/react-components'\nimport { styled } from '@linaria/react'\nimport { FirebaseDatabaseNode } from '@react-firebase/database'\n\nimport hawesLinks from 'data/hawesLinks.json'\nimport smartassLinks from 'data/smartassLinks.json'\n\nimport { Content } from 'components/core/Layout'\nimport { Subtitle, Title } from 'components/core/Type'\nimport { Links } from 'components/Links'\n\nconst gf = new GiphyFetch(process.env.REACT_APP_GIPHY_API_KEY)\n\nconst HawesPage = () => {\n\tconst [gif, setGif] = useState()\n\tconst [limit /*, setLimit*/] = useState(100)\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\t// const { data: gifs } = await gf.search('great job', { sort: 'relevant', lang: 'en', limit: 10, type: 'gifs' })\n\t\t\t// setGif(gifs[0])\n\t\t\tconst { data } = await gf.random({ tag: 'good job', lang: 'en', type: 'gifs' })\n\t\t\tsetGif(data)\n\t\t}\n\t\tfetchData()\n\t}, [])\n\n\tconst renderGif = useMemo(() => {\n\t\tif (!gif) return null\n\n\t\tconst finalGif = gif.images.fixed_height\n\t\treturn (\n\t\t\t<GifContainer>\n\t\t\t\t<Gif gif={gif} width={finalGif.width} noLink />\n\t\t\t</GifContainer>\n\t\t)\n\t}, [gif])\n\n\treturn (\n\t\t<>\n\t\t\t<Title>Welcome, Hawes!</Title>\n\t\t\t<Content>\n\t\t\t\t{/*  */}\n\t\t\t\t<Subtitle>Recent Feedback</Subtitle>\n\t\t\t\t<FirebaseDatabaseNode path=\"feedback/\" limitToFirst={limit} orderByValue={'created_on'}>\n\t\t\t\t\t{data => {\n\t\t\t\t\t\tconst { value } = data\n\n\t\t\t\t\t\tif (value === null || typeof value === 'undefined') return null\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{Object.keys(value)\n\t\t\t\t\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t\t\t\t\t.map(key => {\n\t\t\t\t\t\t\t\t\t\t\tconst feedback = value[key]\n\t\t\t\t\t\t\t\t\t\t\tif (!feedback.approved) return null\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<Feedback.Container key={key}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Feedback.Comment>\"{feedback.comment}\"</Feedback.Comment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Feedback.Name>{feedback.name}</Feedback.Name>\n\t\t\t\t\t\t\t\t\t\t\t\t</Feedback.Container>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</FirebaseDatabaseNode>\n\n\t\t\t\t{/*  */}\n\t\t\t\t<Subtitle>Moral Support</Subtitle>\n\t\t\t\t{renderGif}\n\n\t\t\t\t{/*  */}\n\t\t\t\t<Subtitle>Feel Good Links</Subtitle>\n\t\t\t\t<Links links={hawesLinks} />\n\n\t\t\t\t{/*  */}\n\t\t\t\t<Subtitle>Smartass Links</Subtitle>\n\t\t\t\t<Links links={smartassLinks} />\n\t\t\t</Content>\n\t\t</>\n\t)\n}\n\nconst GifContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n`\n\nconst Feedback = {}\nFeedback.Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\tpadding: 16px 8px;\n\tborder: 1px solid #dedede;\n\tborder-radius: 8px;\n\tmargin: 16px 8px;\n\n\t@media (max-width: 420px) {\n\t\tflex-direction: column;\n\t}\n`\nFeedback.Comment = styled.div`\n\tflex: 1;\n\tmargin-right: 8px;\n\n\t@media (max-width: 420px) {\n\t\tmargin-right: 0;\n\t\tmargin-bottom: 8px;\n\t}\n`\nFeedback.Name = styled.div`\n\tflex: 1;\n\ttext-overflow: ellipsis;\n\tmax-width: 150px;\n\toverflow: hidden;\n\n\t@media (max-width: 420px) {\n\t\tmax-width: unset;\n\t}\n`\n\nexport default memo(HawesPage)\n","import React, { memo } from 'react'\nimport { FirebaseAuthConsumer } from '@react-firebase/auth'\n\nimport Button from 'components/core/Button'\nimport { Content } from 'components/core/Layout'\nimport { Title } from 'components/core/Type'\n\n// import colors from 'utils/colors'\n\nconst LandingPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<Title>Are you Hawes?</Title>\n\t\t\t<Content>\n\t\t\t\t{/*  */}\n\t\t\t\t<Button to=\"/hawes\" eventName=\"hawes\">\n\t\t\t\t\tYes\n\t\t\t\t</Button>\n\t\t\t\t{/*  */}\n\t\t\t\t<Button to=\"/not-hawes\" eventName=\"not_hawes\">\n\t\t\t\t\tNo\n\t\t\t\t</Button>\n\t\t\t\t{/*  */}\n\t\t\t\t<FirebaseAuthConsumer>\n\t\t\t\t\t{({ isSignedIn }) => {\n\t\t\t\t\t\treturn isSignedIn ? (\n\t\t\t\t\t\t\t<Button to=\"/admin\" eventName=\"admin\">\n\t\t\t\t\t\t\t\tAdmin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) : null\n\t\t\t\t\t}}\n\t\t\t\t</FirebaseAuthConsumer>\n\t\t\t</Content>\n\t\t</>\n\t)\n}\n\nexport default memo(LandingPage)\n","import { styled } from '@linaria/react'\n\nexport const InputGroup = styled.div`\n\tmargin: 16px 8px;\n`\n\nexport const Label = styled.label`\n\tbox-sizing: border-box;\n\tmargin: 0px;\n\tmin-width: 0px;\n\twidth: 100%;\n\tfont-size: 16px;\n\tfont-weight: 700;\n\tdisplay: flex;\n`\n\nexport const Input = styled.input`\n\tmargin: 0px;\n\tmin-width: 0px;\n\tdisplay: block;\n\twidth: 100%;\n\tpadding: 16px;\n\tappearance: none;\n\tfont-size: inherit;\n\tline-height: inherit;\n\tborder-width: 1px;\n\tborder-style: solid;\n\tborder-image: initial;\n\tborder-radius: 4px;\n\tcolor: inherit;\n\tbackground-color: #0000;\n\n\t&:focus {\n\t\tborder-color: #349c09;\n\t\toutline: none;\n\t\tbox-shadow: 0 0 0 2px #349c09;\n\t}\n`\n","import React, { memo, useCallback, useEffect, useRef, useState } from 'react'\nimport { styled } from '@linaria/react'\nimport { FirebaseDatabaseMutation } from '@react-firebase/database'\nimport firebase from 'firebase'\n\nimport externalLinks from 'data/externalLinks.json'\n\nimport Button from 'components/core/Button'\nimport { Input, InputGroup, Label } from 'components/core/Input'\nimport { Content } from 'components/core/Layout'\nimport { Subtitle, Title } from 'components/core/Type'\nimport { LinkGroups } from 'components/Links'\n\nconst Form = styled.form`\n\tdisplay: block;\n\tflex-direction: column;\n`\n\nconst NotHawesPage = () => {\n\tconst commentFieldRef = useRef()\n\tconst nameFieldRef = useRef()\n\tconst [success, setSuccess] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (success) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetSuccess(false)\n\t\t\t}, 5000)\n\t\t}\n\t}, [success])\n\n\tconst handleSubmit = useCallback(\n\t\trunMutation => async ev => {\n\t\t\tev.preventDefault()\n\t\t\tawait runMutation({\n\t\t\t\tcomment: commentFieldRef.current.value,\n\t\t\t\tname: nameFieldRef.current.value,\n\t\t\t\tcreated_at: firebase.database.ServerValue.TIMESTAMP,\n\t\t\t\tupdated_at: firebase.database.ServerValue.TIMESTAMP,\n\t\t\t})\n\t\t\tcommentFieldRef.current.value = ''\n\t\t\tnameFieldRef.current.value = ''\n\t\t\tsetSuccess(true)\n\t\t},\n\t\t[]\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<Title>Team Hawes</Title>\n\t\t\t<Content>\n\t\t\t\t{/*  */}\n\t\t\t\t<Subtitle>Leave Feedback for Hawes</Subtitle>\n\t\t\t\t{success && <Success>Feedback submitted successfully</Success>}\n\t\t\t\t<FirebaseDatabaseMutation type=\"push\" path=\"feedback\">\n\t\t\t\t\t{({ runMutation }) => (\n\t\t\t\t\t\t<Form onSubmit={handleSubmit(runMutation)}>\n\t\t\t\t\t\t\t{/*  */}\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t<Label htmlFor=\"comment\">Comment</Label>\n\t\t\t\t\t\t\t\t<Input type=\"text\" id=\"comment\" name=\"comment\" placeholder=\"Put something nice here\" ref={commentFieldRef} required />\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t{/*  */}\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t<Label htmlFor=\"name\">Name</Label>\n\t\t\t\t\t\t\t\t<Input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Who are you?\" ref={nameFieldRef} required />\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t\t{/*  */}\n\t\t\t\t\t\t\t<Button type=\"submit\" eventName=\"submit\" small>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</FirebaseDatabaseMutation>\n\t\t\t\t{/*  */}\n\t\t\t\t<Subtitle>Useful Links</Subtitle>\n\t\t\t\t<LinkGroups groups={externalLinks} />\n\t\t\t</Content>\n\t\t</>\n\t)\n}\n\nconst Success = styled.div`\n\tcolor: #165001;\n\tpadding: 8px;\n\tborder: 1px solid #165001;\n\tbackground: #90ee90;\n\tborder-radius: 4px;\n\tmargin: 0px 8px;\n`\n\nexport default memo(NotHawesPage)\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nconst Wrapper = styled.div`\n\theight: 100vh;\n\twidth: 100vw;\n\tdisplay: flex;\n\talign-items: center;\n\t/* background: #231f20; */\n\t/* color: white; */\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tflex-direction: column;\n\tmargin-top: 60px;\n`\n\nconst Hero = styled.div`\n\tfont-size: 7em;\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\t/* color: #ffb94c; */\n`\n\nconst Error = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Hero>Oh no!!!</Hero>\n\t\t\t<h1>Something went wrong</h1>\n\t\t\t<div>Please reload the page to try again.</div>\n\t\t</Wrapper>\n\t)\n}\n\nexport default memo(Error)\n","export const firebaseConfig = {\n\tapiKey: process.env.REACT_APP_FIREBASE_apiKey,\n\tauthDomain: process.env.REACT_APP_FIREBASE_authDomain,\n\tprojectId: process.env.REACT_APP_FIREBASE_projectId,\n\tstorageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId,\n\tappId: process.env.REACT_APP_FIREBASE_appId,\n\tmeasurementId: process.env.REACT_APP_FIREBASE_measurementId,\n}\n","import React, { memo } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { FirebaseAuthProvider } from '@react-firebase/auth'\nimport { FirebaseDatabaseProvider } from '@react-firebase/database'\nimport * as Sentry from '@sentry/react'\nimport firebase from 'firebase'\nimport firebaseAuth from 'firebase/app'\n\nimport AdminPage from 'pages/AdminPage'\nimport HawesPage from 'pages/HawesPage'\nimport LandingPage from 'pages/LandingPage'\nimport NotHawesPage from 'pages/NotHawesPage'\n\nimport Button from 'components/core/Button'\nimport { Content } from 'components/core/Layout'\nimport Error from 'components/Errors/AppError'\nimport { firebaseConfig } from 'utils/firebaseConfig'\n\nfunction App() {\n\treturn (\n\t\t<Sentry.ErrorBoundary fallback={<Error />}>\n\t\t\t<React.Profiler id=\"App\">\n\t\t\t\t<FirebaseAuthProvider {...firebaseConfig} firebase={firebaseAuth}>\n\t\t\t\t\t<FirebaseDatabaseProvider firebase={firebase} {...firebaseConfig}>\n\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t\t\t\t<LandingPage />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/hawes\">\n\t\t\t\t\t\t\t\t\t\t<HawesPage />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/not-hawes\">\n\t\t\t\t\t\t\t\t\t\t<NotHawesPage />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Route path=\"/admin\">\n\t\t\t\t\t\t\t\t\t\t<AdminPage />\n\t\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t\t<Content>\n\t\t\t\t\t\t\t\t\t\t<Button to=\"/\" eventName=\"back\">\n\t\t\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</FirebaseDatabaseProvider>\n\t\t\t\t</FirebaseAuthProvider>\n\t\t\t</React.Profiler>\n\t\t</Sentry.ErrorBoundary>\n\t)\n}\n\nexport default memo(App)\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as Panelbear from '@panelbear/panelbear-js'\nimport * as Sentry from '@sentry/react'\nimport { Integrations } from '@sentry/tracing'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// Sentry\nif (isProduction) {\n\tSentry.init({\n\t\tdsn: process.env.REACT_APP_SENTRY_DSN,\n\t\tautoSessionTracking: true,\n\t\tenvironment: process.env.NODE_ENV,\n\t\tintegrations: [new Integrations.BrowserTracing()],\n\n\t\t// We recommend adjusting this value in production, or using tracesSampler\n\t\t// for finer control\n\t\ttracesSampleRate: 1.0,\n\t})\n}\n\n// Analytics\nif (process.env.REACT_APP_PANELBEAR_SITE_ID) {\n\tPanelbear.load(process.env.REACT_APP_PANELBEAR_SITE_ID)\n\tPanelbear.trackPageview()\n\tPanelbear.track('PageLoad')\n}\n\nReactDOM.unstable_createRoot(document.getElementById('root')).render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(isProduction ? console.log : () => {})\n"],"sourceRoot":""}