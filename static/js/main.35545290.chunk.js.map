{"version":3,"sources":["pages/HawesPage.js","components/core/Button.js","components/core/Type.js","pages/LandingPage.js","components/Links.js","pages/NotHawesPage.js","components/Errors/AppError.js","App.js","reportWebVitals.js","index.js"],"names":["Column","Title","HawesPage","memo","StyledButton","rest","handleClick","useCallback","Panelbear","onClick","LandingPage","to","eventName","Links","links","map","link","href","target","rel","title","LinkGroups","groups","group","Fragment","NotHawesPage","Wrapper","Hero","Error","App","fallback","Profiler","id","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","process","autoSessionTracking","environment","integrations","Integrations","tracesSampleRate","ReactDOM","document","console"],"mappings":"4yDAGMA,EAAM,oDAQNC,EAAK,kDAMLC,EAAY,WACjB,OACC,0BACC,+CAKYC,iBAAf,G,0BCpBMC,EAAY,yDAgClB,EAbe,SAAC,GAA2B,IAA3B,EAA2B,EAA3B,UAAgBC,EAAW,6BACpCC,EAAcC,uBAAY,WAC/B,GACCC,uCAEC,CAJH,IAKA,OACC,qBAAKC,QAAL,WACC,sC,MC9BI,IAAMR,EAAK,kD,MCMlB,IAAMD,EAAM,oDASNU,EAAc,WACnB,OACC,4BACC,6CACA,iBAAQC,GAAR,SAAoBC,UAApB,yBAGA,iBAAQD,GAAR,aAAwBC,UAAxB,gCAOYT,iBAAf,G,kBC7BaU,EAAQV,gBAAK,YAAe,IAAZW,EAAY,EAAZA,MAC5B,OACC,6BACEA,EAAMC,KAAI,SAAAC,GAAI,OACd,6BACC,mBAAGC,KAAMD,EAAKC,KAAMC,OAAO,SAASC,IAAI,aAAxC,SACEH,EAAKI,SAFCJ,EAAKI,eAULC,EAAa,SAAC,GAAe,IAAbC,EAAa,EAAbA,OAC5B,OACC,8BACEA,EAAOP,KAAI,SAAAQ,GAAK,OAChB,eAAC,IAAMC,SAAP,WACC,6BAAKD,EAAMH,QACX,cAACP,EAAD,CAAOC,MAAOS,EAAMT,UAFAS,EAAMH,aCdzBpB,EAAM,oDAQNC,EAAK,kDAMLwB,EAAe,WACpB,OACC,4BACC,gDACA,uCACA,iBAAYH,OAAZ,QAKYnB,iBAAf,G,MC3BA,IAAMuB,EAAO,sDAaPC,EAAI,kDAOJC,EAAQ,WACb,OACC,4BACC,uCACA,sDACA,2EAKYzB,iBAAf,GCvBA,SAAS0B,IACR,OACC,cAAC,IAAD,CAAsBC,SAAU,cAAC,EAAD,IAAhC,SACC,cAAC,IAAMC,SAAP,CAAgBC,GAAG,MAAnB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACC,cAAC,EAAD,e,MASQ9B,qBAAK0B,GCpBLK,EAZS,SAAAC,GACnBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAiD,IAA9CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCQVQ,IAAY,CACXC,IAAKC,4EACLC,qBAFW,EAGXC,YAAaF,aACbG,aAAc,CAAC,IAAIC,IAJR,gBAQXC,iBAAkB,IAMnB1C,OAAeqC,cACfrC,kBACAA,oBAGD2C,wBAA6BC,wBAA7BD,gBACC,cAAC,IAAD,qBACC,uBAOFjB,EAA+BmB,QAAH,O","file":"static/js/main.35545290.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nconst Column = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 0px 16px;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst Title = styled.h1`\n\tfont-size: 96px;\n\tletter-spacing: 4px;\n\ttext-align: center;\n`\n\nconst HawesPage = () => {\n\treturn (\n\t\t<Column>\n\t\t\t<Title>You are Hawes</Title>\n\t\t</Column>\n\t)\n}\n\nexport default memo(HawesPage)\n","import { useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport { styled } from '@linaria/react'\nimport * as Panelbear from '@panelbear/panelbear-js'\n\nconst StyledButton = styled(Link)`\n\tpadding: 16px 32px;\n\t/* border: 0px; */\n\tborder: 2px solid #222;\n\tmargin: 16px;\n\tfont-weight: 700;\n\tfont-size: 32px;\n\tborder-radius: 8px;\n\tmin-width: 300px;\n\tbackground-color: #efefef;\n\ttext-align: center;\n\tdisplay: inline-block;\n\n\t&:hover {\n\t\ttext-decoration: none;\n\t\tbackground-color: #dedede;\n\t}\n`\n\nconst Button = ({ eventName, ...rest }) => {\n\tconst handleClick = useCallback(() => {\n\t\tif (eventName) {\n\t\t\tPanelbear.track(`Button Click - ${eventName}`)\n\t\t}\n\t}, [eventName])\n\treturn (\n\t\t<div onClick={handleClick}>\n\t\t\t<StyledButton {...rest} />\n\t\t</div>\n\t)\n}\n\nexport default Button\n","import { styled } from '@linaria/react'\n\nexport const Title = styled.h1`\n\tfont-size: 96px;\n\tletter-spacing: 4px;\n\ttext-align: center;\n`\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nimport Button from 'components/core/Button'\nimport { Title } from 'components/core/Type'\n\n// import colors from 'utils/colors'\n\nconst Column = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 0px 16px;\n\t/* max-width: 608px; */\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst LandingPage = () => {\n\treturn (\n\t\t<Column>\n\t\t\t<Title>Are you Hawes?</Title>\n\t\t\t<Button to=\"/hawes\" eventName=\"hawes\">\n\t\t\t\tYes\n\t\t\t</Button>\n\t\t\t<Button to=\"/not-hawes\" eventName=\"not_hawes\">\n\t\t\t\tNo\n\t\t\t</Button>\n\t\t</Column>\n\t)\n}\n\nexport default memo(LandingPage)\n","import React, { memo } from 'react'\n\nexport const Links = memo(({ links }) => {\n\treturn (\n\t\t<ul>\n\t\t\t{links.map(link => (\n\t\t\t\t<li key={link.title}>\n\t\t\t\t\t<a href={link.href} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t{link.title}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n})\n\nexport const LinkGroups = ({ groups }) => {\n\treturn (\n\t\t<div>\n\t\t\t{groups.map(group => (\n\t\t\t\t<React.Fragment key={group.title}>\n\t\t\t\t\t<h3>{group.title}</h3>\n\t\t\t\t\t<Links links={group.links} />\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nimport externalLinks from 'components/externalLinks.json'\nimport { LinkGroups } from 'components/Links'\n\nconst Column = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 0px 16px;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst Title = styled.h1`\n\tfont-size: 96px;\n\tletter-spacing: 4px;\n\ttext-align: center;\n`\n\nconst NotHawesPage = () => {\n\treturn (\n\t\t<Column>\n\t\t\t<Title>You are not Hawes</Title>\n\t\t\t<h2>Links</h2>\n\t\t\t<LinkGroups groups={externalLinks} />\n\t\t</Column>\n\t)\n}\n\nexport default memo(NotHawesPage)\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nconst Wrapper = styled.div`\n\theight: 100vh;\n\twidth: 100vw;\n\tdisplay: flex;\n\talign-items: center;\n\tbackground: #231f20;\n\tcolor: white;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tflex-direction: column;\n\tmargin-top: 60px;\n`\n\nconst Hero = styled.div`\n\tfont-size: 7em;\n\ttext-transform: uppercase;\n\tfont-weight: bold;\n\tcolor: #ffb94c;\n`\n\nconst Error = () => {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Hero>Oh no!!!</Hero>\n\t\t\t<h1>Something went wrong</h1>\n\t\t\t<div>Please reload the page to try again.</div>\n\t\t</Wrapper>\n\t)\n}\n\nexport default memo(Error)\n","import React, { memo } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport * as Sentry from '@sentry/react'\n\nimport HawesPage from 'pages/HawesPage'\nimport LandingPage from 'pages/LandingPage'\nimport NotHawesPage from 'pages/NotHawesPage'\n\nimport Error from 'components/Errors/AppError'\n\nfunction App() {\n\treturn (\n\t\t<Sentry.ErrorBoundary fallback={<Error />}>\n\t\t\t<React.Profiler id=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/hawes\">\n\t\t\t\t\t\t\t<HawesPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/not-hawes\">\n\t\t\t\t\t\t\t<NotHawesPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t<LandingPage />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</React.Profiler>\n\t\t</Sentry.ErrorBoundary>\n\t)\n}\n\nexport default memo(App)\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as Panelbear from '@panelbear/panelbear-js'\nimport * as Sentry from '@sentry/react'\nimport { Integrations } from '@sentry/tracing'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// Sentry\nif (isProduction) {\n\tSentry.init({\n\t\tdsn: process.env.REACT_APP_SENTRY_DSN,\n\t\tautoSessionTracking: true,\n\t\tenvironment: process.env.NODE_ENV,\n\t\tintegrations: [new Integrations.BrowserTracing()],\n\n\t\t// We recommend adjusting this value in production, or using tracesSampler\n\t\t// for finer control\n\t\ttracesSampleRate: 1.0,\n\t})\n}\n\n// Analytics\nif (process.env.REACT_APP_PANELBEAR_SITE_ID) {\n\tPanelbear.load(process.env.REACT_APP_PANELBEAR_SITE_ID)\n\tPanelbear.trackPageview()\n\tPanelbear.track('PageLoad')\n}\n\nReactDOM.unstable_createRoot(document.getElementById('root')).render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(isProduction ? console.log : () => {})\n"],"sourceRoot":""}