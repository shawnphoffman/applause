{"version":3,"sources":["ComingSoon.js","reportWebVitals.js","index.js"],"names":["Title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","process","autoSessionTracking","environment","integrations","Integrations","tracesSampleRate","Panelbear","ReactDOM","document","console"],"mappings":"qQAKMA,EAAK,mDAeX,MARA,WACC,OACC,8BACC,gD,MCfH,IAYeC,EAZS,SAAAC,GACnBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAiD,IAA9CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCSVQ,IAAY,CACXC,IAAKC,4EACLC,qBAFW,EAGXC,YAAaF,aACbG,aAAc,CAAC,IAAIC,IAJR,gBAQXC,iBAAkB,IAMnBC,OAAeN,cACfM,kBACAA,oBAGDC,wBAA6BC,wBAA7BD,gBACC,cAAC,IAAD,qBACC,uBAOFlB,EAA+BoB,QAAH,O","file":"static/js/main.a81d3b74.chunk.js","sourcesContent":["import React from 'react'\nimport { styled } from '@linaria/react'\n\n// import colors from 'utils/colors'\n\nconst Title = styled.h1`\n\tfont-weight: 300;\n\tfont-size: 6rem;\n\tmargin-top: 1em;\n\tletter-spacing: 0.05em;\n`\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Title>Coming Soon...</Title>\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as Panelbear from '@panelbear/panelbear-js'\nimport * as Sentry from '@sentry/react'\nimport { Integrations } from '@sentry/tracing'\n\n// import App from './App'\nimport App from './ComingSoon'\nimport reportWebVitals from './reportWebVitals'\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// Sentry\nif (isProduction) {\n\tSentry.init({\n\t\tdsn: process.env.REACT_APP_SENTRY_DSN,\n\t\tautoSessionTracking: true,\n\t\tenvironment: process.env.NODE_ENV,\n\t\tintegrations: [new Integrations.BrowserTracing()],\n\n\t\t// We recommend adjusting this value in production, or using tracesSampler\n\t\t// for finer control\n\t\ttracesSampleRate: 1.0,\n\t})\n}\n\n// Analytics\nif (process.env.REACT_APP_PANELBEAR_SITE_ID) {\n\tPanelbear.load(process.env.REACT_APP_PANELBEAR_SITE_ID)\n\tPanelbear.trackPageview()\n\tPanelbear.track('PageLoad')\n}\n\nReactDOM.unstable_createRoot(document.getElementById('root')).render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(isProduction ? console.log : () => {})\n"],"sourceRoot":""}